import cv2
import numpy as np

def empty(a):
    pass

def get_color_name(h, s, v):
    if s < 50 and v > 200:
        return "White"
    elif v < 50:
        return "Black"
    elif h < 10 or h > 170:
        return "Red"
    elif 10 <= h < 25:
        return "Orange"
    elif 25 <= h < 35:
        return "Yellow"
    elif 35 <= h < 85:
        return "Green"
    elif 85 <= h < 125:
        return "Blue"
    elif 125 <= h < 170:
        return "Purple"
    else:
        return "Unknown"

# Create a window with trackbars
cv2.namedWindow("Trackbars")
cv2.resizeWindow("Trackbars", 640, 240)
cv2.createTrackbar("Hue Min", "Trackbars", 0, 179, empty)
cv2.createTrackbar("Hue Max", "Trackbars", 179, 179, empty)
cv2.createTrackbar("Sat Min", "Trackbars", 0, 255, empty)
cv2.createTrackbar("Sat Max", "Trackbars", 255, 255, empty)
cv2.createTrackbar("Val Min", "Trackbars", 0, 255, empty)
cv2.createTrackbar("Val Max", "Trackbars", 255, 255, empty)

# Start webcam
cap = cv2.VideoCapture(0)

while True:
    success, img = cap.read()
    if not success:
        break

    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    # Get center pixel
    center_x, center_y = img.shape[1] // 2, img.shape[0] // 2
    hsv_value = hsv[center_y, center_x]
    h, s, v = hsv_value

    # Get the color name
    color_name = get_color_name(h, s, v)

    # Draw a circle at the center and display color name
    cv2.circle(img, (center_x, center_y), 5, (255, 255, 255), -1)
    cv2.putText(img, f"Color: {color_name}", (10, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

    # Show image
    cv2.imshow("Color Detection", img)

    # Exit with 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
